# Branches that trigger a build on commit
trigger:
- main
- feature/*
- release/*

# Branches that trigger builds on PR
pr:
- main
- feature/*
- release/*

jobs:

- job: Format
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    maxParallel: 8
    matrix:
      format:
        _repo: "https://github.com/dotnet/format"
        _repoName: "dotnet/format"
        _targetSolution: "format.sln"
        _branchName: "main"
        _sha: "3ad458b16ef0d630ef4393bca5bdeaa00628cfcf"
      roslyn:
        _repo: "https://github.com/dotnet/roslyn"
        _repoName: "dotnet/roslyn"
        _targetSolution: "Compilers.sln"
        _branchName: "main"
        _sha: "7e99a9ab877c4233b6a87c555d4c42b29f40c553"
      project-system:
        _repo: "https://github.com/dotnet/project-system"
        _repoName: "dotnet/project-system"
        _targetSolution: "ProjectSystem.sln"
        _branchName: "main"
        _sha: "34c750bd2e793026bb190bd789e2ed07be5b621b"
      msbuild:
        _repo: "https://github.com/dotnet/msbuild"
        _repoName: "dotnet/msbuild"
        _targetSolution: "MSBuild.sln"
        _branchName: "master"
        _sha: "0be0490bd1261ff4a6ad64267879b36a63a33faf"
      efcore:
        _repo: "https://github.com/dotnet/efcore"
        _repoName: "dotnet/efcore"
        _targetSolution: "All.sln"
        _branchName: "main"
        _sha: "f1a0d8c9928668310336565e73861a7e1702ddaf"
  timeoutInMinutes: 60
  steps:
    - script: eng\integration-test.cmd -repo '$(_repo)' -branchName '$(_branchName)' -sha '$(_sha)' -targetSolution '$(_targetSolution)' -testPath '$(Build.SourcesDirectory)\temp' -stage 'prepare'
      displayName: Prepare $(_repoName) for formatting

    - script: eng\integration-test.cmd -repo '$(_repo)' -branchName '$(_branchName)' -sha '$(_sha)' -targetSolution '$(_targetSolution)' -testPath '$(Build.SourcesDirectory)\temp' -stage 'format-workspace'
      displayName: Run dotnet-format on $(_repoName) $(_targetSolution)

    - script: eng\integration-test.cmd -repo '$(_repo)' -branchName '$(_branchName)' -sha '$(_sha)' -targetSolution '$(_targetSolution)' -testPath '$(Build.SourcesDirectory)\temp' -stage 'format-folder'
      displayName: Run dotnet-format on $(_repoName) repo folder
