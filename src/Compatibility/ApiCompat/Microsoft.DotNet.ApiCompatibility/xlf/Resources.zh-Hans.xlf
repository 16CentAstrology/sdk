<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="zh-Hans" original="../Resources.resx">
    <body>
      <trans-unit id="ApiCompatRunnerExecutingWorkItems">
        <source>Executing {0} work item(s)...</source>
        <target state="new">Executing {0} work item(s)...</target>
        <note />
      </trans-unit>
      <trans-unit id="ApiCompatibilityHeader">
        <source>API compatibility errors between '{0}' ({2}) and '{1}' ({3}):</source>
        <target state="new">API compatibility errors between '{0}' ({2}) and '{1}' ({3}):</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyCultureDoesNotMatch">
        <source>{2} assembly culture '{0}' does not match with {3} assembly culture '{1}'.</source>
        <target state="new">{2} assembly culture '{0}' does not match with {3} assembly culture '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyLoadError">
        <source>Could not load assembly symbols for '{0}'. Skipping the assembly.</source>
        <target state="new">Could not load assembly symbols for '{0}'. Skipping the assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyNameDoesNotExist">
        <source>Assembly with name '{0}' does not exist at {1}.</source>
        <target state="new">Assembly with name '{0}' does not exist at {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyNameDoesNotMatch">
        <source>{2} assembly name '{0}' does not match with {3} assembly name '{1}'.</source>
        <target state="new">{2} assembly name '{0}' does not match with {3} assembly name '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyPublicKeyTokenDoesNotMatch">
        <source>{2} assembly public key token '{0}' does not match with {3} '{1}'.</source>
        <target state="new">{2} assembly public key token '{0}' does not match with {3} '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblySearchDirectoryDoesNotExist">
        <source>Provided assembly search directory '{0}' does not exist.</source>
        <target state="new">Provided assembly search directory '{0}' does not exist.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyVersionDoesNotMatch">
        <source>{3} assembly version '{1}' should be equal to {2} version '{0}'.</source>
        <target state="new">{3} assembly version '{1}' should be equal to {2} version '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="AssemblyVersionIsNotCompatible">
        <source>{2} assembly version '{0}' should be equal to or higher than {3} version '{1}'.</source>
        <target state="new">{2} assembly version '{0}' should be equal to or higher than {3} version '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotAddAbstractMember">
        <source>Cannot add abstract member '{0}' to {1} because it does not exist on {2}</source>
        <target state="new">Cannot add abstract member '{0}' to {1} because it does not exist on {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotAddAttribute">
        <source>Cannot add attribute '{0}' to '{1}'.</source>
        <target state="new">Cannot add attribute '{0}' to '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotAddGenericConstraint">
        <source>Cannot add constraint '{0}' on type parameter '{1}' of '{2}'.</source>
        <target state="new">Cannot add constraint '{0}' on type parameter '{1}' of '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotAddMemberToInterface">
        <source>Cannot add interface member '{0}' to {1} because it does not exist on {2}</source>
        <target state="new">Cannot add interface member '{0}' to {1} because it does not exist on {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotAddSealedToInterfaceMember">
        <source>Cannot add sealed keyword to default interface member '{0}'.</source>
        <target state="new">Cannot add sealed keyword to default interface member '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotAddVirtualToMember">
        <source>Cannot add virtual keyword to member '{0}'.</source>
        <target state="new">Cannot add virtual keyword to member '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotChangeAttribute">
        <source>Cannot change arguments of attribute '{0}' on '{1}'.</source>
        <target state="new">Cannot change arguments of attribute '{0}' on '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotChangeParameterName">
        <source>Parameter name on member '{0}' changed from '{1}' to '{2}'.</source>
        <target state="new">Parameter name on member '{0}' changed from '{1}' to '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotExpandVisibility">
        <source>Visibility of '{0}' expanded from '{1}' to '{2}'.</source>
        <target state="new">Visibility of '{0}' expanded from '{1}' to '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotReduceVisibility">
        <source>Visibility of '{0}' reduced from '{1}' to '{2}'.</source>
        <target state="new">Visibility of '{0}' reduced from '{1}' to '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotRemoveAttribute">
        <source>Cannot remove attribute '{0}' from '{1}'.</source>
        <target state="new">Cannot remove attribute '{0}' from '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotRemoveBaseInterface">
        <source>Type '{0}' does not implement interface '{1}' on {2} but it does on {3}</source>
        <target state="new">Type '{0}' does not implement interface '{1}' on {2} but it does on {3}</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotRemoveBaseType">
        <source>Type '{0}' does not inherit from base type '{1}' on {2} but it does on {3}</source>
        <target state="new">Type '{0}' does not inherit from base type '{1}' on {2} but it does on {3}</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotRemoveGenericConstraint">
        <source>Cannot remove constraint '{0}' on type parameter '{1}' of '{2}'.</source>
        <target state="new">Cannot remove constraint '{0}' on type parameter '{1}' of '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotRemoveVirtualFromMember">
        <source>Cannot remove virtual keyword from member '{0}'.</source>
        <target state="new">Cannot remove virtual keyword from member '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ElementShouldNotBeNullAtIndex">
        <source>Element at index {0} should not be null.</source>
        <target state="new">Element at index {0} should not be null.</target>
        <note />
      </trans-unit>
      <trans-unit id="EnumTypesMustMatch">
        <source>Underlying type of enum '{0}' changed from '{1}' to '{2}'.</source>
        <target state="new">Underlying type of enum '{0}' changed from '{1}' to '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="EnumValuesMustMatch">
        <source>Value of field '{1}' in enum '{0}' changed from '{2}' to '{3}'.</source>
        <target state="new">Value of field '{1}' in enum '{0}' changed from '{2}' to '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="IndexShouldBeWithinSetSizeRange">
        <source>The {0} index should be in the range zero through {1} inclusive.</source>
        <target state="new">The {0} index should be in the range zero through {1} inclusive.</target>
        <note />
      </trans-unit>
      <trans-unit id="MatchingAssemblyNotFound">
        <source>Could not find matching assembly: '{0}' in any of the search directories.</source>
        <target state="new">Could not find matching assembly: '{0}' in any of the search directories.</target>
        <note />
      </trans-unit>
      <trans-unit id="MemberExistsOnLeft">
        <source>Member '{0}' exists on {1} but not on {2}</source>
        <target state="new">Member '{0}' exists on {1} but not on {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="MemberExistsOnRight">
        <source>Member '{0}' exists on {2} but not on {1}</source>
        <target state="new">Member '{0}' exists on {2} but not on {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="RightNamesAtLeastOne">
        <source>Should at least contain one right name.</source>
        <target state="new">Should at least contain one right name.</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldBeGreaterThanZero">
        <source>Value of '{0}' should be greater than 0.</source>
        <target state="new">Value of '{0}' should be greater than 0.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeIsActuallySealed">
        <source>Type '{0}' has the sealed modifier on {1} but not on {2}</source>
        <target state="new">Type '{0}' has the sealed modifier on {1} but not on {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeIsEffectivelySealed">
        <source>Type '{0}' is sealed because it has no visible constructor on {1} but it does on {2}</source>
        <target state="new">Type '{0}' is sealed because it has no visible constructor on {1} but it does on {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeMissingOnSide">
        <source>Type '{0}' exists on {1} but not on {2}</source>
        <target state="new">Type '{0}' exists on {1} but not on {2}</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>