<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <BundledManifests Include="Microsoft.NET.Sdk.Android" FeatureBand="6.0.100" Version="$(XamarinAndroidWorkloadManifestVersion)" />
    <BundledManifests Include="Microsoft.NET.Sdk.iOS" FeatureBand="6.0.100" Version="$(XamarinIOSWorkloadManifestVersion)" />
    <BundledManifests Include="Microsoft.NET.Sdk.MacCatalyst" FeatureBand="6.0.100" Version="$(XamarinMacCatalystWorkloadManifestVersion)" />
    <BundledManifests Include="Microsoft.NET.Sdk.macOS" FeatureBand="6.0.100" Version="$(XamarinMacOSWorkloadManifestVersion)" />
    <BundledManifests Include="Microsoft.NET.Sdk.Maui" FeatureBand="6.0.100" Version="$(MauiWorkloadManifestVersion)" />
    <BundledManifests Include="Microsoft.NET.Sdk.tvOS" FeatureBand="6.0.100" Version="$(XamarinTvOSWorkloadManifestVersion)" />
    <BundledManifests Include="Microsoft.NET.Workload.Mono.ToolChain" FeatureBand="6.0.100" Version="$(MonoWorkloadManifestVersion)" />
    <BundledManifests Include="Microsoft.NET.Workload.Emscripten" FeatureBand="6.0.100" Version="$(EmscriptenWorkloadManifestVersion)" />
  </ItemGroup>

  <!-- Calculate NuGet package IDs for bundled manifests -->
  <PropertyGroup>
    <!-- TODO: Not exactly sure how this value should be calculated -->
    <!--<MsiArchitectureForWorkloadManifests>$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture.ToString().ToLowerInvariant)</MsiArchitectureForWorkloadManifests>-->
    <MsiArchitectureForWorkloadManifests>$(Architecture)</MsiArchitectureForWorkloadManifests>
  </PropertyGroup>
  <ItemGroup>
    <BundledManifests Update="@(BundledManifests)">
      <NupkgId>%(Identity).Manifest-%(FeatureBand)</NupkgId>
      <MsiNupkgId>%(Identity).Manifest-%(FeatureBand).Msi.$(MsiArchitectureForWorkloadManifests)</MsiNupkgId>
      <RestoredNupkgContentPath>$(NuGetPackageRoot)$([MSBuild]::ValueOrDefault('%(NupkgId)', '').ToLower())/$([MSBuild]::ValueOrDefault('%(Version)', '').ToLower())</RestoredNupkgContentPath>
      <RestoredMsiNupkgContentPath>$(NuGetPackageRoot)$([MSBuild]::ValueOrDefault('%(MsiNupkgId)', '').ToLower())/$([MSBuild]::ValueOrDefault('%(Version)', '').ToLower())</RestoredMsiNupkgContentPath>
      <RestoredMsiPathInNupkg>%(RestoredMsiNupkgContentPath)/data/%(NupkgId).%(Version)-$(MsiArchitectureForWorkloadManifests).msi</RestoredMsiPathInNupkg>
    </BundledManifests>
  </ItemGroup>

  <!-- Restore workload manifests via PackageDownload -->
  <ItemGroup>
    <PackageDownload Include="@(BundledManifests->'%(NupkgId)')" >
      <Version>[%(Version)]</Version>
    </PackageDownload>

    <PackageDownload Include="@(BundledManifests->'%(MsiNupkgId)')" >
      <Version>[%(Version)]</Version>
    </PackageDownload>
  </ItemGroup>

  <Target Name="LayoutManifests"
          DependsOnTargets="SetupBundledComponents">

    <ItemGroup>
      <ManifestContent Include="%(BundledManifests.RestoredNupkgContentPath)\data\*"
                       Condition="Exists('%(RestoredNupkgContentPath)\data')"
                       DestinationPath="$([MSBuild]::ValueOrDefault('%(Identity)', '').ToLower())"
                       RestoredNupkgContentPath="%(RestoredNupkgContentPath)"
                       WorkloadManifestId="%(Identity)"/>

      <ManifestContent Include="%(BundledManifests.RestoredNupkgContentPath)\data\localize\*"
                       Condition="Exists('%(RestoredNupkgContentPath)\data\localize')"
                       DestinationPath="$([MSBuild]::ValueOrDefault('%(Identity)', '').ToLower())/localize"/>
    </ItemGroup>

    <Error Text="No workload manifest content found." Condition="'@(ManifestContent->Count())' == '0'" />
    
    <Copy SourceFiles="@(ManifestContent)"
          DestinationFolder="$(RedistLayoutPath)sdk-manifests/$(CliProductBandVersion)00/%(DestinationPath)"/>
  
  </Target>
</Project>
